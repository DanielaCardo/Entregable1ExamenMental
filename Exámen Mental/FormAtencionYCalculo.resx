<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="ttpMensajeAtencionCE.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="lblTextoAtencionC.Text" xml:space="preserve">
    <value>Reste 100 - 7 en forma sucesiva durante 5 veces. Registre un punto por cada 
respuesta correcta: 93-86-79-72-65.
En ele caso que la persona no sepa restar utilizar la siguiente altenativa: Decir 
los meses del año al revez: Diciembre, Noviembre, Octubre, Septiembre, Agosto.

</value>
  </data>
  <metadata name="erpErrorACE.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>192, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        LEQXtAoy/v8HDIAI/hIQIxkAAAAASUVORK5CYII=
</value>
  </data>
</root>